services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
      - .:/app
    ports:
      - '${NGINX_HOST_PORT}:80'
    depends_on:
      - php-fpm
    restart: always
    networks:
      - pets-demo_default
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
      args:
        - HOST_USER_UID=${HOST_USER_UID}
        - HOST_USER_GID=${HOST_USER_GID}
    volumes:
      - .:/app
    environment:
      APP_DEBUG: 1
      PHP_IDE_CONFIG: 'serverName=jira-integration.docker'
      VIRTUAL_HOST: 'jira-integration.ryabkoff.ru'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      - mysql
    restart: always
    networks:
      - pets-demo_default
  php-cli:
    build:
      context: .
      dockerfile: ./docker/php-cli/Dockerfile
      args:
        - HOST_USER_UID=${HOST_USER_UID}
        - HOST_USER_GID=${HOST_USER_GID}
    environment:
      APP_DEBUG: 1
    volumes:
      - .:/app
      - composer:/tmp/composer-cache
    profiles:
      - 'cli-tools'        # the profile is needed in order not to start this service with "docker compose up" command
    networks:
      - pets-demo_default
  mysql:
    image: mysql:8.0
    volumes:
      - mysql:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    ports:
      - '${DATABASE_HOST_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    restart: always
    networks:
      - pets-demo_default

volumes:
  composer:
  mysql:


networks:
  pets-demo_default:
    external: true
